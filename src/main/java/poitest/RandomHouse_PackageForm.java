package poitest;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

import java.awt.datatransfer.DataFlavor;
import java.awt.dnd.DnDConstants;
import java.awt.dnd.DropTarget;
import java.awt.dnd.DropTargetDropEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.*;
import java.awt.*;



/**
 *
 * @author Rudra.Tiwari
 */
public class RandomHouse_PackageForm extends javax.swing.JDialog {

    /**
     * Creates new form RandomHouse_PackageForm
     */
     /**
     * Creates new form RandomHouse_PackageForm
     */
    public boolean is_closed = false;
    private JDialog dia;
    private String dragged_Data = "";
    
    public RandomHouse_PackageForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        final java.awt.Toolkit toolkit = java.awt.Toolkit.getDefaultToolkit();
        final java.awt.Dimension screenSize = toolkit.getScreenSize();
        final int x = (screenSize.width -getWidth())/2;
        final int y = (screenSize.height-getHeight())/2;
        setLocation( x , y );
        
        txt_coverPage.setDropTarget(new DropTarget() 
        {
            public synchronized void drop(DropTargetDropEvent evt) 
            {
                try 
                {
                    evt.acceptDrop(DnDConstants.ACTION_COPY);
                    List<File> droppedFiles = (List<File>)evt.getTransferable().getTransferData(DataFlavor.javaFileListFlavor);
                    for(File file:droppedFiles)
                    {
                        if(file.isFile() == true && file.exists() == true)
                        {
                            txt_coverPage.setText(file.getCanonicalPath());
                            break;
                        }
                        else
                            txt_coverPage.setText("");
                    }
                }
                catch(Exception ex)
                {
                    JOptionPane.showMessageDialog(null,"Error\n" + ex.toString(),"Error",JOptionPane.ERROR_MESSAGE);
                }
            }
        });
        
         txt_manifestFile.setDropTarget(new DropTarget() {
            public synchronized void drop(DropTargetDropEvent evt) 
            {
                try 
                {
                    evt.acceptDrop(DnDConstants.ACTION_COPY);
                    List<File> droppedFiles = (List<File>)evt.getTransferable().getTransferData(DataFlavor.javaFileListFlavor);
                    for(File file:droppedFiles)
                    {
                        if(file.isFile() == true && file.exists() == true)
                        {
                            txt_manifestFile.setText(file.getCanonicalPath());
                            break;
                        }
                        else
                            txt_manifestFile.setText("");
                    }
                }
                catch(Exception ex)
                {
                    JOptionPane.showMessageDialog(null,"Error\n" + ex.toString(),"Error",JOptionPane.ERROR_MESSAGE);
                }
            }
        });
        
        dia = this;                
        
        setLayout(null);
        
//        JDialog dialog = new JDialog();
//        dialog.setSize(400, 400);
//        dialog.setLayout(null);
//          JComponent component = create();
//          component.setBounds(400, 10, 250, 400);
//          jPanel1.add(component);
//        dialog.add(component);
//        dialog.setVisible(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        lbl_eISBN = new javax.swing.JLabel();
        txt_eISBN = new javax.swing.JTextField();
        lbl_startPage = new javax.swing.JLabel();
        txt_startPage = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        lbl_coverPage = new javax.swing.JLabel();
        txt_coverPage = new javax.swing.JTextField();
        btn_browseCoverPage = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lbl_isbn = new javax.swing.JLabel();
        txt_isbn = new javax.swing.JTextField();
        lbl_title = new javax.swing.JLabel();
        txt_title = new javax.swing.JTextField();
        lbl_subTitle = new javax.swing.JLabel();
        txt_subTitle = new javax.swing.JTextField();
        lbl_author = new javax.swing.JLabel();
        txt_author = new javax.swing.JTextField();
        lbl_division = new javax.swing.JLabel();
        txt_division = new javax.swing.JTextField();
        lbl_imprint = new javax.swing.JLabel();
        txt_imprint = new javax.swing.JTextField();
        lbl_onSaleDate = new javax.swing.JLabel();
        txt_onSaleDate = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        lbl_message = new javax.swing.JLabel();
        btn_load = new javax.swing.JButton();
        txt_manifestFile = new javax.swing.JTextField();
        lbl_manifestFile = new javax.swing.JLabel();
        btn_browseManifest = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Random House Packaging Information");

        lbl_eISBN.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lbl_eISBN.setText("eISBN:");

        txt_eISBN.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txt_eISBN.setText("9781101910351");

        lbl_startPage.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lbl_startPage.setText("Start Page");

        txt_startPage.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txt_startPage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_startPageKeyReleased(evt);
            }
        });

        lbl_coverPage.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lbl_coverPage.setText("Cover Page");

        txt_coverPage.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txt_coverPage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_coverPageKeyReleased(evt);
            }
        });

        btn_browseCoverPage.setText("...");
        btn_browseCoverPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_browseCoverPageActionPerformed(evt);
            }
        });

        jPanel2.setOpaque(false);

        lbl_isbn.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lbl_isbn.setText("ISBN:");

        txt_isbn.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txt_isbn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txt_isbnMouseReleased(evt);
            }
        });

        lbl_title.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lbl_title.setText("Title:");

        txt_title.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N

        lbl_subTitle.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lbl_subTitle.setText("SubTitle:");

        txt_subTitle.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N

        lbl_author.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lbl_author.setText("Author:");

        txt_author.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N

        lbl_division.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lbl_division.setText("Division:");

        txt_division.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N

        lbl_imprint.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lbl_imprint.setText("Imprint:");

        txt_imprint.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N

        lbl_onSaleDate.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lbl_onSaleDate.setText("On Sale Date:");

        txt_onSaleDate.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N

        jButton2.setMnemonic('C');
        jButton2.setText("Clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButton2KeyReleased(evt);
            }
        });

        jButton1.setMnemonic('D');
        jButton1.setText("Done");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButton1KeyReleased(evt);
            }
        });

        lbl_message.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lbl_message.setForeground(new java.awt.Color(255, 0, 51));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_message, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jButton2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lbl_imprint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbl_division, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbl_author, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbl_subTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(lbl_onSaleDate, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lbl_title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbl_isbn, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txt_imprint, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                                .addComponent(txt_division, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txt_author, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txt_subTitle, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txt_title, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txt_isbn, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txt_onSaleDate)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_isbn, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_isbn, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_title, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_title, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_subTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_subTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_author, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_author, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_division, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_division, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_imprint, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_imprint, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_onSaleDate, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_onSaleDate, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_message, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        btn_load.setText("Load");
        btn_load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_loadActionPerformed(evt);
            }
        });

        txt_manifestFile.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txt_manifestFile.setText("e:\\important\\sandeep\\NetBeansProjects\\BasicTest\\Aptara_Frontlist2014_r163.xlsx");
        txt_manifestFile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_manifestFileKeyReleased(evt);
            }
        });

        lbl_manifestFile.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lbl_manifestFile.setText("Manifest File");

        btn_browseManifest.setText("...");
        btn_browseManifest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_browseManifestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(lbl_startPage, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(33, 33, 33)
                            .addComponent(txt_startPage, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(lbl_coverPage)
                            .addGap(32, 32, 32)
                            .addComponent(txt_coverPage, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btn_browseCoverPage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lbl_eISBN, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbl_manifestFile))
                            .addGap(27, 27, 27)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(txt_eISBN, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn_load))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(txt_manifestFile, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btn_browseManifest, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(246, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_startPage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lbl_startPage, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_coverPage, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_browseCoverPage, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lbl_coverPage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_manifestFile, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_manifestFile, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_browseManifest, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_eISBN, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_load))
                    .addComponent(lbl_eISBN, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(139, 139, 139))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_startPageKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_startPageKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        ok_Pressed();
    }//GEN-LAST:event_txt_startPageKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ok_Pressed();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            ok_Pressed();
    }//GEN-LAST:event_jButton1KeyReleased

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        do_Clear();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        do_Clear();
    }//GEN-LAST:event_jButton2KeyReleased

    private void txt_coverPageKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_coverPageKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_coverPageKeyReleased

    private void btn_browseCoverPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_browseCoverPageActionPerformed
        CoverBrowse coverref = new CoverBrowse(dia, true);
        coverref.setVisible(true);
        txt_coverPage.setText(coverref.filePath);
    }//GEN-LAST:event_btn_browseCoverPageActionPerformed

    private void txt_isbnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_isbnMouseReleased
        if( evt.getSource() == txt_isbn ) return;
        txt_isbn.setText(dragged_Data);
    }//GEN-LAST:event_txt_isbnMouseReleased

    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1MouseDragged

    private void btn_loadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_loadActionPerformed

        
        String filePath = txt_manifestFile.getText();
        String eIsbn = txt_eISBN.getText();
        if(filePath == null || filePath.trim().isEmpty()){
            lbl_message.setText("Browse a valid manifest file.");
            return;
        }
        if(eIsbn == null || eIsbn.trim().isEmpty()){
            lbl_message.setText("Please enter a valid eISBN.");
            return;
        }
        FileIO fileIO = new FileIO();
        fileIO.readManifestFile(filePath);
        List [] record = fileIO.getRecord("eISBN", eIsbn);
        if(record == null || record.length < 2){
            lbl_message.setText("Record not found.");
            return;
        }
        List<String> colNames = record[0];
        List<String> colValues = record[1];
        for(int i = 0; i < colNames.size(); i++){
            String column = colNames.get(i);
            if(column.toLowerCase().matches(".*eisbn.*")){
                txt_eISBN.setText(colValues.get(i));
            }
            else if(column.toLowerCase().matches(".*isbn.*") && !column.toLowerCase().matches(".*eisbn.*")){
                txt_isbn.setText(colValues.get(i));
            }
            else if(column.toLowerCase().matches(".*subtitle.*")){
                txt_subTitle.setText(colValues.get(i));
            }
            else if(column.toLowerCase().matches(".*title.*") && !column.toLowerCase().matches(".*subTitle.*")){
                txt_title.setText(colValues.get(i));
            }
            else if(column.toLowerCase().matches(".*author.*")){
                txt_author.setText(colValues.get(i));
            }
            else if(column.toLowerCase().matches(".*division.*")){
                txt_division.setText(colValues.get(i));
            }
            else if(column.toLowerCase().matches(".*imprint.*")){
                txt_imprint.setText(colValues.get(i));
            }
            else if(column.replaceAll(" ", "").toLowerCase().matches(".*onsaledate.*")){
                txt_onSaleDate.setText(colValues.get(i));
            }            
        }
        
    draw();        
    }//GEN-LAST:event_btn_loadActionPerformed

    
    public void draw() {
        JComponent component = create(20);
        component.setBounds(400, 10, 250, 400);
        jPanel1.add(component);
        pack();
        setSize(661, 500);
    }
    public JComponent create(int controls) {
        BorderLayout blayout = new BorderLayout();
        GridLayout layout = new GridLayout(controls, 2, 5, 5);
        JPanel parentParent = new JPanel();
        parentParent.setPreferredSize(new Dimension(250, 400));
        parentParent.setLayout(blayout);
        JPanel panel = new JPanel();
        panel.setLayout(layout);
        JScrollPane jsp = new JScrollPane();
        jsp.setViewportView(panel);
        parentParent.add(jsp, BorderLayout.CENTER);
        for(int i = 1; i <= controls; i++) {
            panel.add(createLabel("Label " + i));
            panel.add(createTextField("TextField " + i));
        }
        System.out.println("run");
        return(parentParent);
    }
    public JLabel createLabel(String text) {
        JLabel label = new JLabel(text);
        label.setPreferredSize(new Dimension(100, 30));
        return(label);
    }
    public JTextField createTextField(String text) {
        final JTextField textField = new JTextField(text);
        textField.setDragEnabled(true);
        textField.setPreferredSize(new Dimension(100, 30));
        textField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent ae) {
                textField.selectAll();
                System.out.println("XX");
            }
        });
        return(textField);
    }
    
    
    
    
    
    private void txt_manifestFileKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_manifestFileKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_manifestFileKeyReleased

    private void btn_browseManifestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_browseManifestActionPerformed
        CoverBrowse coverref = new CoverBrowse(dia, true);
        coverref.setVisible(true);
        txt_manifestFile.setText(coverref.filePath);
    }//GEN-LAST:event_btn_browseManifestActionPerformed

     public boolean containsOnlyNumbers(String str) 
    {
        //It can't contain only numbers if it's null or empty...
        if (str == null || str.length() == 0)
            return false;
        
        for (int i = 0; i < str.length(); i++) 
        {
            //If we find a non-digit character we return false.
            if (!Character.isDigit(str.charAt(i)))
                return false;
        }
        return true;
    }
    
    private boolean is_Roman(String str)
    {
        boolean ret = true;
        for(int i = 0; i < str.length(); i++) 
        {
            char ch = str.charAt(i);
            if(ch!='i'&&ch!='I'&&ch!='v'&&ch!='V'&&ch!='x'&&ch!='X'&&ch!='l'&&ch!='L'&&ch!='c'&&ch!='C'
               &&ch!='d'&&ch!='D'&&ch!='m'&&ch!='M'
              )
               return false; 
        }
        
        Pattern p = Pattern.compile("^M{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})$",Pattern.CASE_INSENSITIVE);
        Matcher m = p.matcher(str);
        if(m.find() == true)
        {}
        else
            ret = false; 
            
        return ret;
    }
    
    private void ok_Pressed()
    {        
        String spage = txt_startPage.getText();
        String titlepage = txt_coverPage.getText();
        String eisbn = txt_eISBN.getText();
        String isbn = txt_isbn.getText();
        String title = txt_title.getText();
        String subTitle  = txt_subTitle.getText();
        String author = txt_author.getText();
        String division = txt_division.getText();
        String imprint = txt_imprint.getText();
        String onSaleDate = txt_onSaleDate.getText();
        
        File titleImage = new File(titlepage);
        
        
        if(spage.trim().equals("")){
            lbl_message.setText("Start page Field Empty");
            txt_startPage.requestFocus();
            return;
        } else if(titlepage.trim().equals("")){
            lbl_message.setText("Cover page Field Empty");
            txt_coverPage.requestFocus();
            return;
        } else if(eisbn.trim().equals("")){
            lbl_message.setText("eISBN Field Empty");
            txt_eISBN.requestFocus();
            return;
        } else if(eisbn.length() < 10 || eisbn.length()>13){
            lbl_message.setText("eISBN should contains characters between 10 to 13");
            txt_eISBN.requestFocus();
            return;
        } else if( !containsOnlyNumbers(eisbn)) {
            lbl_message.setText("Numeric field required in eISBN");
            txt_eISBN.requestFocus();
            return;
        } else if(!containsOnlyNumbers(spage) && !is_Roman(spage)){
            txt_startPage.grabFocus();
            lbl_message.setText("Valid Numbers required in start page");
            return;
        } else if(titleImage.exists()==false && titleImage.isFile()==false){
            txt_coverPage.grabFocus();
            lbl_message.setText("Title Page Doesn't Exists");
            return;
        } 
        try {
            //Store the necessary data here for the Head Information............
            String destination = "C:/IZNO/collect_images/title.jpg";
            File d1_en = new File(destination);
            File parentfolder = d1_en.getParentFile();
            if(parentfolder.exists()==false)
                parentfolder.mkdirs();

            //dll_Download.main(titleImage, d1_en);                
            is_closed = true;

            RHMetaInfo1.setStart_page(spage);
            RHMetaInfo1.setCoverPath(destination);
            RHMetaInfo1.setEisbn(eisbn);
            RHMetaInfo1.setIsbn(isbn);
            RHMetaInfo1.setTitle(title);
            RHMetaInfo1.setSubTitle(subTitle);
            RHMetaInfo1.setAuthor(author);
            RHMetaInfo1.setDivision(division);
            RHMetaInfo1.setImprint(imprint);
            RHMetaInfo1.setOnSaleDate(onSaleDate);

            this.dispose();
        }
        catch(Exception ex)
        {
            //Logger.getLogger(RHDialog.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }
    
    private void do_Clear()
    {        
        txt_startPage.setText("");
        txt_coverPage.setText("");        
        txt_eISBN.setText("");
        txt_isbn.setText("");
        txt_title.setText("");
        txt_subTitle.setText("");
        txt_author.setText("");
        txt_division.setText("");
        txt_imprint.setText("");
        txt_onSaleDate.setText("");        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RandomHouse_PackageForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RandomHouse_PackageForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RandomHouse_PackageForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RandomHouse_PackageForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RandomHouse_PackageForm dialog = new RandomHouse_PackageForm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_browseCoverPage;
    private javax.swing.JButton btn_browseManifest;
    private javax.swing.JButton btn_load;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lbl_author;
    private javax.swing.JLabel lbl_coverPage;
    private javax.swing.JLabel lbl_division;
    private javax.swing.JLabel lbl_eISBN;
    private javax.swing.JLabel lbl_imprint;
    private javax.swing.JLabel lbl_isbn;
    private javax.swing.JLabel lbl_manifestFile;
    private javax.swing.JLabel lbl_message;
    private javax.swing.JLabel lbl_onSaleDate;
    private javax.swing.JLabel lbl_startPage;
    private javax.swing.JLabel lbl_subTitle;
    private javax.swing.JLabel lbl_title;
    private javax.swing.JTextField txt_author;
    public static javax.swing.JTextField txt_coverPage;
    private javax.swing.JTextField txt_division;
    private javax.swing.JTextField txt_eISBN;
    private javax.swing.JTextField txt_imprint;
    private javax.swing.JTextField txt_isbn;
    public static javax.swing.JTextField txt_manifestFile;
    private javax.swing.JTextField txt_onSaleDate;
    private javax.swing.JTextField txt_startPage;
    private javax.swing.JTextField txt_subTitle;
    private javax.swing.JTextField txt_title;
    // End of variables declaration//GEN-END:variables
}
